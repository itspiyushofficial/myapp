{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttut\\\\myapp\\\\src\\\\User.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams, useLocation } from \"react-router-dom\";\n\n// const User = ({ match }) => {\n//   return <h1>User {match.params.fname} Page</h1>;\n// };\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const {\n    fname,\n    lname\n  } = useParams();\n  const location = useLocation();\n  console.log(location);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"User \", fname, \" \", lname, \" Page\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" My current Location is \", location.pathname, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), location.pathname === `/user/piyush/gupta` ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        alert();\n      },\n      children: \"Click Me \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n};\n_s(User, \"VE02PtwG1qq6PI7ElzAPGZU8Gno=\", false, function () {\n  return [useParams, useLocation];\n});\n_c = User;\nexport default User;\n\n// The `useLocation` hook in React Router is used to return the current location of a React component.\n// The `useLocation` returns the current location as an object and comes with props such as\n\n// pathname\n// state\n// search\n// key\n// hash\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useParams","useLocation","jsxDEV","_jsxDEV","Fragment","_Fragment","User","_s","fname","lname","location","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","pathname","onClick","alert","_c","$RefreshReg$"],"sources":["D:/reacttut/myapp/src/User.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useParams, useLocation } from \"react-router-dom\";\r\n\r\n// const User = ({ match }) => {\r\n//   return <h1>User {match.params.fname} Page</h1>;\r\n// };\r\nconst User = () => {\r\n  const { fname, lname } = useParams();\r\n  const location = useLocation();\r\n  console.log(location);\r\n  return (\r\n    <>\r\n      <h1>\r\n        User {fname} {lname} Page\r\n      </h1>\r\n      <p> My current Location is {location.pathname} </p>\r\n      {location.pathname === `/user/piyush/gupta` ? (\r\n        <button onClick={()=> {\r\n          alert()\r\n        }}>Click Me </button>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n\r\n// The `useLocation` hook in React Router is used to return the current location of a React component.\r\n// The `useLocation` returns the current location as an object and comes with props such as\r\n\r\n// pathname\r\n// state\r\n// search\r\n// key\r\n// hash\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;;AAEzD;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGT,SAAS,CAAC,CAAC;EACpC,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9BU,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrB,oBACEP,OAAA,CAAAE,SAAA;IAAAQ,QAAA,gBACEV,OAAA;MAAAU,QAAA,GAAI,OACG,EAACL,KAAK,EAAC,GAAC,EAACC,KAAK,EAAC,OACtB;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLd,OAAA;MAAAU,QAAA,GAAG,0BAAwB,EAACH,QAAQ,CAACQ,QAAQ,EAAC,GAAC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAClDP,QAAQ,CAACQ,QAAQ,KAAM,oBAAmB,gBACzCf,OAAA;MAAQgB,OAAO,EAAEA,CAAA,KAAK;QACpBC,KAAK,CAAC,CAAC;MACT,CAAE;MAAAP,QAAA,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,GACnB,IAAI;EAAA,eACR,CAAC;AAEP,CAAC;AAACV,EAAA,CAjBID,IAAI;EAAA,QACiBN,SAAS,EACjBC,WAAW;AAAA;AAAAoB,EAAA,GAFxBf,IAAI;AAmBV,eAAeA,IAAI;;AAEnB;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}