{"ast":null,"code":"var _jsxFileName = \"D:\\\\reacttut\\\\myapp\\\\src\\\\component\\\\accordian\\\\MyAccordian.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyAccordian = ({\n  question,\n  answer\n}) => {\n  _s();\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-heading\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2795\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }, this), show, \"  \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: answer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true);\n};\n_s(MyAccordian, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n_c = MyAccordian;\nexport default MyAccordian;\nvar _c;\n$RefreshReg$(_c, \"MyAccordian\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MyAccordian","question","answer","_s","show","setShow","children","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/reacttut/myapp/src/component/accordian/MyAccordian.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst MyAccordian = ({question, answer}) => {\r\n    const [show, setShow] = useState(false);\r\n    return (\r\n        <>\r\n            <div className=\"main-heading\">\r\n                <p>âž•</p>\r\n                <h3>{question}</h3>\r\n            </div>\r\n            {show }  <p>{answer}</p>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default MyAccordian;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,WAAW,GAAGA,CAAC;EAACC,QAAQ;EAAEC;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACvC,oBACIE,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACIT,OAAA;MAAKU,SAAS,EAAC,cAAc;MAAAD,QAAA,gBACzBT,OAAA;QAAAS,QAAA,EAAG;MAAC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACRd,OAAA;QAAAS,QAAA,EAAKL;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,EACLP,IAAI,EAAE,IAAE,eAAAP,OAAA;MAAAS,QAAA,EAAIJ;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA,eAC1B,CAAC;AAEX,CAAC;AAAAR,EAAA,CAXKH,WAAW;AAAAY,EAAA,GAAXZ,WAAW;AAajB,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}